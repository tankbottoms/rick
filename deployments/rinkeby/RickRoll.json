{
  "address": "0x9ec46D9ff2fCf4509Bd32DA2Dc4069c12f20B234",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxBufferLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_noOfBytes",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "buffer",
          "type": "uint256[]"
        }
      ],
      "name": "append",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrayBuffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bufferLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRickRoll",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "noOfBytes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x906030e423d5cc6f2f14c9b8fc66c96b8db96b4890a7001fd03dfb15faef1bd8",
  "receipt": {
    "to": null,
    "from": "0xf255724dEB4E3Bd0f875382D1BdA2A639CF48cFf",
    "contractAddress": "0x9ec46D9ff2fCf4509Bd32DA2Dc4069c12f20B234",
    "transactionIndex": 0,
    "gasUsed": "9211701",
    "logsBloom": "0x
    "blockHash": "0x450902fe143d156632fb2fd04854b7cf340d398c0dce05777a50f3805c55f96f",
    "transactionHash": "0x906030e423d5cc6f2f14c9b8fc66c96b8db96b4890a7001fd03dfb15faef1bd8",
    "logs": [],
    "blockNumber": 10506227,
    "cumulativeGasUsed": "9211701",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "3763",
    "120390"
  ],
  "numDeployments": 1,
  "solcInputHash": "b0510626da53c53ff9be93979ae920cd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxBufferLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_noOfBytes\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"buffer\",\"type\":\"uint256[]\"}],\"name\":\"append\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"arrayBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bufferLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRickRoll\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"noOfBytes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RickRoll.sol\":\"RickRoll\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/RickRoll.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\nimport {RickRollInterface} from './interfaces/RickRollInterface.sol';\\nimport {Base64} from './libraries/Base64.sol';\\n\\ncontract RickRoll is RickRollInterface {\\n  string public name;\\n  uint256[] public arrayBuffer;\\n  uint256 public bufferLength;\\n  uint256 public noOfBytes;\\n\\n  constructor(uint256 _maxBufferLength, uint256 _noOfBytes) {\\n    arrayBuffer = new uint256[](_maxBufferLength);\\n    noOfBytes = _noOfBytes;\\n  }\\n\\n  function append(uint256[] memory buffer) public override {\\n    for (uint256 i = 0; i < buffer.length; i++) {\\n      arrayBuffer[bufferLength + i] = buffer[i];\\n    }\\n    bufferLength += buffer.length;\\n  }\\n\\n  function getRickRoll() public view override returns (string memory) {\\n    bytes memory _bytes = new bytes(noOfBytes);\\n    for (uint256 i = 0; i < arrayBuffer.length; i++) {\\n      uint256 num = arrayBuffer[i];\\n      for (uint256 j = 0; num > 0 && j < 32 && (i * 32 + j) < noOfBytes; j++) {\\n        uint8 remainder = uint8(num % 0x100);\\n        _bytes[i * 32 + j] = bytes1(uint8(remainder));\\n        num = num / 0x100;\\n      }\\n    }\\n    return string(abi.encodePacked('data:audio/mp3;base64,', Base64.encode(_bytes)));\\n  }\\n\\n  function setName(string memory _name) public override {\\n    name = _name;\\n  }\\n}\\n\",\"keccak256\":\"0xeee74386c83f21469177c886729dbae964dd86d015bc7c4e2f0475bb52bed435\",\"license\":\"MIT\"},\"contracts/interfaces/RickRollInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\ninterface RickRollInterface {\\n  function append(uint256[] memory buffer) external;\\n  function getRickRoll() external view returns (string memory);\\n  function setName(string memory _name) external;\\n}\\n\",\"keccak256\":\"0xa054cf90aa610df4af450918502821b8b96b58601862c1307a9212eb6a001209\",\"license\":\"MIT\"},\"contracts/libraries/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// [MIT License]\\n/// @title Base64\\n/// @notice Provides a function for encoding some bytes in base64\\n/// @author Brecht Devos <brecht@loopring.org>\\nlibrary Base64 {\\n    bytes internal constant TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n    /// @notice Encodes some bytes to the base64 representation\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        uint256 len = data.length;\\n        if (len == 0) return \\\"\\\";\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((len + 2) / 3);\\n\\n        // Add some extra buffer at the end\\n        bytes memory result = new bytes(encodedLen + 32);\\n        bytes memory table = TABLE;\\n\\n        assembly {\\n            let tablePtr := add(table, 1)\\n            let resultPtr := add(result, 32)\\n\\n            for {\\n                let i := 0\\n            } lt(i, len) {\\n\\n            } {\\n                i := add(i, 3)\\n                let input := and(mload(add(data, i)), 0xffffff)\\n                let out := mload(add(tablePtr, and(shr(18, input), 0x3F)))\\n                out := shl(8, out)\\n                out := add(out, and(mload(add(tablePtr, and(shr(12, input), 0x3F))), 0xFF))\\n                out := shl(8, out)\\n                out := add(out, and(mload(add(tablePtr, and(shr(6, input), 0x3F))), 0xFF))\\n                out := shl(8, out)\\n                out := add(out, and(mload(add(tablePtr, and(input, 0x3F))), 0xFF))\\n                out := shl(224, out)\\n                mstore(resultPtr, out)\\n                resultPtr := add(resultPtr, 4)\\n            }\\n\\n            switch mod(len, 3)\\n            case 1 {\\n                mstore(sub(resultPtr, 2), shl(240, 0x3d3d))\\n            }\\n            case 2 {\\n                mstore(sub(resultPtr, 1), shl(248, 0x3d))\\n            }\\n\\n            mstore(result, encodedLen)\\n        }\\n        return string(result);\\n    }\\n}\",\"keccak256\":\"0x6709cd31530524fcc2dac3343eb17a9d704ea613e83712968dc199b2ea5cf2d8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a94380380610a9483398101604081905261002f916100ef565b816001600160401b0381111561004757610047610113565b604051908082528060200260200182016040528015610070578160200160208202803683370190505b5080516100859160019160209091019061008f565b5060035550610129565b8280548282559060005260206000209081019282156100ca579160200282015b828111156100ca5782518255916020019190600101906100af565b506100d69291506100da565b5090565b5b808211156100d657600081556001016100db565b6000806040838503121561010257600080fd5b505080516020909101519092909150565b634e487b7160e01b600052604160045260246000fd5b61095c806101386000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635f0d3a851161005b5780635f0d3a85146100ca57806382c56f59146100d3578063bab0530a146100db578063c47f0027146100f057600080fd5b806306fdde03146100825780633517f210146100a05780634dc39a8d146100b7575b600080fd5b61008a610103565b604051610097919061076e565b60405180910390f35b6100a960025481565b604051908152602001610097565b6100a96100c5366004610710565b610191565b6100a960035481565b61008a6101b2565b6100ee6100e93660046105ce565b610338565b005b6100ee6100fe36600461067b565b6103b8565b600080546101109061084d565b80601f016020809104026020016040519081016040528092919081815260200182805461013c9061084d565b80156101895780601f1061015e57610100808354040283529160200191610189565b820191906000526020600020905b81548152906001019060200180831161016c57829003601f168201915b505050505081565b600181815481106101a157600080fd5b600091825260209091200154905081565b6060600060035467ffffffffffffffff8111156101d1576101d16108f9565b6040519080825280601f01601f1916602001820160405280156101fb576020820181803683370190505b50905060005b60015481101561030957600060018281548110610220576102206108e3565b9060005260206000200154905060005b6000821180156102405750602081105b80156102625750600354816102568560206107fe565b61026091906107d2565b105b156102f4576000610275610100846108a3565b905060f881901b85836102898760206107fe565b61029391906107d2565b815181106102a3576102a36108e3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506102de610100846107ea565b92505080806102ec90610888565b915050610230565b5050808061030190610888565b915050610201565b50610313816103cf565b6040516020016103239190610729565b60405160208183030381529060405291505090565b60005b815181101561039c57818181518110610356576103566108e3565b602002602001015160018260025461036e91906107d2565b8154811061037e5761037e6108e3565b6000918252602090912001558061039481610888565b91505061033b565b508051600260008282546103b091906107d2565b909155505050565b80516103cb906000906020840190610535565b5050565b8051606090806103ef575050604080516020810190915260008152919050565b600060036103fe8360026107d2565b61040891906107ea565b6104139060046107fe565b905060006104228260206107d2565b67ffffffffffffffff81111561043a5761043a6108f9565b6040519080825280601f01601f191660200182016040528015610464576020820181803683370190505b5090506000604051806060016040528060408152602001610910604091399050600181016020830160005b868110156104f0576003818a01810151603f601282901c8116860151600c83901c8216870151600684901c831688015192909316870151600891821b60ff94851601821b92841692909201901b91160160e01b83526004909201910161048f565b50600386066001811461050a576002811461051b57610527565b613d3d60f01b600119830152610527565b603d60f81b6000198301525b505050918152949350505050565b8280546105419061084d565b90600052602060002090601f01602090048101928261056357600085556105a9565b82601f1061057c57805160ff19168380011785556105a9565b828001600101855582156105a9579182015b828111156105a957825182559160200191906001019061058e565b506105b59291506105b9565b5090565b5b808211156105b557600081556001016105ba565b600060208083850312156105e157600080fd5b823567ffffffffffffffff808211156105f957600080fd5b818501915085601f83011261060d57600080fd5b81358181111561061f5761061f6108f9565b8060051b91506106308483016107a1565b8181528481019084860184860187018a101561064b57600080fd5b600095505b8386101561066e578035835260019590950194918601918601610650565b5098975050505050505050565b6000602080838503121561068e57600080fd5b823567ffffffffffffffff808211156106a657600080fd5b818501915085601f8301126106ba57600080fd5b8135818111156106cc576106cc6108f9565b6106de601f8201601f191685016107a1565b915080825286848285010111156106f457600080fd5b8084840185840137600090820190930192909252509392505050565b60006020828403121561072257600080fd5b5035919050565b7f646174613a617564696f2f6d70333b6261736536342c0000000000000000000081526000825161076181601685016020870161081d565b9190910160160192915050565b602081526000825180602084015261078d81604085016020870161081d565b601f01601f19169190910160400192915050565b604051601f8201601f1916810167ffffffffffffffff811182821017156107ca576107ca6108f9565b604052919050565b600082198211156107e5576107e56108b7565b500190565b6000826107f9576107f96108cd565b500490565b6000816000190483118215151615610818576108186108b7565b500290565b60005b83811015610838578181015183820152602001610820565b83811115610847576000848401525b50505050565b600181811c9082168061086157607f821691505b6020821081141561088257634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561089c5761089c6108b7565b5060010190565b6000826108b2576108b26108cd565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa164736f6c6343000806000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80635f0d3a851161005b5780635f0d3a85146100ca57806382c56f59146100d3578063bab0530a146100db578063c47f0027146100f057600080fd5b806306fdde03146100825780633517f210146100a05780634dc39a8d146100b7575b600080fd5b61008a610103565b604051610097919061076e565b60405180910390f35b6100a960025481565b604051908152602001610097565b6100a96100c5366004610710565b610191565b6100a960035481565b61008a6101b2565b6100ee6100e93660046105ce565b610338565b005b6100ee6100fe36600461067b565b6103b8565b600080546101109061084d565b80601f016020809104026020016040519081016040528092919081815260200182805461013c9061084d565b80156101895780601f1061015e57610100808354040283529160200191610189565b820191906000526020600020905b81548152906001019060200180831161016c57829003601f168201915b505050505081565b600181815481106101a157600080fd5b600091825260209091200154905081565b6060600060035467ffffffffffffffff8111156101d1576101d16108f9565b6040519080825280601f01601f1916602001820160405280156101fb576020820181803683370190505b50905060005b60015481101561030957600060018281548110610220576102206108e3565b9060005260206000200154905060005b6000821180156102405750602081105b80156102625750600354816102568560206107fe565b61026091906107d2565b105b156102f4576000610275610100846108a3565b905060f881901b85836102898760206107fe565b61029391906107d2565b815181106102a3576102a36108e3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506102de610100846107ea565b92505080806102ec90610888565b915050610230565b5050808061030190610888565b915050610201565b50610313816103cf565b6040516020016103239190610729565b60405160208183030381529060405291505090565b60005b815181101561039c57818181518110610356576103566108e3565b602002602001015160018260025461036e91906107d2565b8154811061037e5761037e6108e3565b6000918252602090912001558061039481610888565b91505061033b565b508051600260008282546103b091906107d2565b909155505050565b80516103cb906000906020840190610535565b5050565b8051606090806103ef575050604080516020810190915260008152919050565b600060036103fe8360026107d2565b61040891906107ea565b6104139060046107fe565b905060006104228260206107d2565b67ffffffffffffffff81111561043a5761043a6108f9565b6040519080825280601f01601f191660200182016040528015610464576020820181803683370190505b5090506000604051806060016040528060408152602001610910604091399050600181016020830160005b868110156104f0576003818a01810151603f601282901c8116860151600c83901c8216870151600684901c831688015192909316870151600891821b60ff94851601821b92841692909201901b91160160e01b83526004909201910161048f565b50600386066001811461050a576002811461051b57610527565b613d3d60f01b600119830152610527565b603d60f81b6000198301525b505050918152949350505050565b8280546105419061084d565b90600052602060002090601f01602090048101928261056357600085556105a9565b82601f1061057c57805160ff19168380011785556105a9565b828001600101855582156105a9579182015b828111156105a957825182559160200191906001019061058e565b506105b59291506105b9565b5090565b5b808211156105b557600081556001016105ba565b600060208083850312156105e157600080fd5b823567ffffffffffffffff808211156105f957600080fd5b818501915085601f83011261060d57600080fd5b81358181111561061f5761061f6108f9565b8060051b91506106308483016107a1565b8181528481019084860184860187018a101561064b57600080fd5b600095505b8386101561066e578035835260019590950194918601918601610650565b5098975050505050505050565b6000602080838503121561068e57600080fd5b823567ffffffffffffffff808211156106a657600080fd5b818501915085601f8301126106ba57600080fd5b8135818111156106cc576106cc6108f9565b6106de601f8201601f191685016107a1565b915080825286848285010111156106f457600080fd5b8084840185840137600090820190930192909252509392505050565b60006020828403121561072257600080fd5b5035919050565b7f646174613a617564696f2f6d70333b6261736536342c0000000000000000000081526000825161076181601685016020870161081d565b9190910160160192915050565b602081526000825180602084015261078d81604085016020870161081d565b601f01601f19169190910160400192915050565b604051601f8201601f1916810167ffffffffffffffff811182821017156107ca576107ca6108f9565b604052919050565b600082198211156107e5576107e56108b7565b500190565b6000826107f9576107f96108cd565b500490565b6000816000190483118215151615610818576108186108b7565b500290565b60005b83811015610838578181015183820152602001610820565b83811115610847576000848401525b50505050565b600181811c9082168061086157607f821691505b6020821081141561088257634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561089c5761089c6108b7565b5060010190565b6000826108b2576108b26108cd565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa164736f6c6343000806000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9,
        "contract": "contracts/RickRoll.sol:RickRoll",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 12,
        "contract": "contracts/RickRoll.sol:RickRoll",
        "label": "arrayBuffer",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 14,
        "contract": "contracts/RickRoll.sol:RickRoll",
        "label": "bufferLength",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 16,
        "contract": "contracts/RickRoll.sol:RickRoll",
        "label": "noOfBytes",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}